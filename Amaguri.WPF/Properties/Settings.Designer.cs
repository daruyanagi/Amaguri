//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Amaguri.WPF.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.8.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1024")]
        public int MaxWidth {
            get {
                return ((int)(this["MaxWidth"]));
            }
            set {
                this["MaxWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1024")]
        public int MaxHeight {
            get {
                return ((int)(this["MaxHeight"]));
            }
            set {
                this["MaxHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ReplaceClipboardImageFileToImageData {
            get {
                return ((bool)(this["ReplaceClipboardImageFileToImageData"]));
            }
            set {
                this["ReplaceClipboardImageFileToImageData"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ScaleClipboardImageData {
            get {
                return ((bool)(this["ScaleClipboardImageData"]));
            }
            set {
                this["ScaleClipboardImageData"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ScaleClipboardImageDataIfExceedWidth {
            get {
                return ((bool)(this["ScaleClipboardImageDataIfExceedWidth"]));
            }
            set {
                this["ScaleClipboardImageDataIfExceedWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ScaleClipboardImageDataIfExceedHeight {
            get {
                return ((bool)(this["ScaleClipboardImageDataIfExceedHeight"]));
            }
            set {
                this["ScaleClipboardImageDataIfExceedHeight"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool SkipScaleIfShiftKeyDown {
            get {
                return ((bool)(this["SkipScaleIfShiftKeyDown"]));
            }
            set {
                this["SkipScaleIfShiftKeyDown"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool SaveClipboardImageDataToDesktop {
            get {
                return ((bool)(this["SaveClipboardImageDataToDesktop"]));
            }
            set {
                this["SaveClipboardImageDataToDesktop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UseScaledImageInSavingToDesktop {
            get {
                return ((bool)(this["UseScaledImageInSavingToDesktop"]));
            }
            set {
                this["UseScaledImageInSavingToDesktop"] = value;
            }
        }
    }
}
